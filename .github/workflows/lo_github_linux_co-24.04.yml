name: lo_github_linux_co-24.04

run-name: Build Collabora Online release co-24.04 branch

on:
  push:
  # workflow_dispatch:
  #   inputs:
  #     lo_ref:
  #       description: 'Commit hash of Collabora core repository'
  #       default: '416ce481a3885e2dbe91fc3a38b85dc8271ec5bf'
  #       required: true
  #       type: string

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/lo_base

jobs:
  docker-image:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Log in to the Container registry
              uses: docker/login-action@v3.0.0
              with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}
            
            - name: Build and push Docker image
              uses: docker/build-push-action@v5.3.0
              with:
                context: .
                file: ./Dockerfile.linux
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/lo_base:latest

                
  build:
    runs-on: self-hosted
    needs: docker-image
    container:
      image: klimarev/lo_base:latest
      options: --user ghactions
    env:
      target: co_core_f4e4fcac768a385b43b8d4dc0453ef8296a67f77
      co_repo: CollaboraOnline/online
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout ${{ env.co_repo }}
        uses: actions/checkout@v4
        with:
          repository: ${{ env.co_repo }}
          ref: f4e4fcac768a385b43b8d4dc0453ef8296a67f77
          submodules: 'recursive'
          path: './${{ env.target }}'

      - name: Build info 
        run: |
          echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
          echo "üêß This job is now running on a ${{ runner.os }} server!"
          echo "üîé This job builds ${{ env.co_repo }} repository ${{ inputs.lo_ref }} commit for android."
          echo "This job is run from $(whoami)"
          echo "Current directory is $(pwd)"
          echo "Current directory structure: $(ls -la)"
          echo "LibreOffice core directory size: $(du -sh ${{ env.target }})"

      - name: Fetch assets from https://github.com/CollaboraOnline/online/releases/download/for-code-assets/core-co-24.04-assets.tar.gz
        run: |
          mkdir assets
          cd assets
          wget https://github.com/CollaboraOnline/online/releases/download/for-code-assets/core-co-24.04-assets.tar.gz
          tar xvf core-co-24.04-assets.tar.gz

      - name: Build ${{ env.target }}
        run: |
          cd ${{ env.target }}
          ./autogen.sh
          ./configure --with-poco-includes=/opt/poco/include --with-poco-libs=/opt/poco/lib --prefix=${GITHUB_WORKSPACE}/install --enable-silent-rules --with-lokit-path=${GITHUB_WORKSPACE}/assets/include --with-lo-path=${GITHUB_WORKSPACE}/assets/instdir
          make -j $(nproc)
          make install

      - name: Check if ${GITHUB_WORKSPACE}/install contains build files
        run: |
          du -sh ${GITHUB_WORKSPACE}/install
          ls -la ${GITHUB_WORKSPACE}/install

      - name: Check if ${{ env.target }} contains build files
        run: |
          du -sh ${{ env.target }}
          ls -la ${{ env.target }}

      - name: Archive ${{ env.target }}
        continue-on-error: true
        run: |
          tar --totals -czf  ${{ env.target }}.tar.gz ${{ env.target }} assets

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.target }}
          path: ${{ env.target }}.tar.gz

      # - name: Upload files to a GitHub release
      #   uses: svenstaro/upload-release-action@2.7.0
      #   with:
      #     file: "*.tar.gz"
      #     overwrite: true
      #     file_glob: true
      #     release_name: android_libreoffice_core_${{ github.ref_name }}
      #     body: "These are compiled ${{ env.co_repo }} ${{ github.ref_name }} for Android for 4 platforms: armeabi-v7a, arm64-v8a, x86, x86_64"
      - run: echo "üçè This job's status is ${{ job.status }}."
