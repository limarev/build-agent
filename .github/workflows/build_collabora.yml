name: Collabora
run-name: Publish new collabora release

on: 
  workflow_dispatch:
    inputs:
      lo_ref:
        description: 'Commit hash of LibreOffice core repository'
        default: 'c5262f7f0d259a903ee33595ff15386a7c4c8af6'
        required: true
        type: string
      co_ref:
        description: 'Commit hash of Collabora online repository'
        default: '96e80a8f9940eac0bcc3ab27cbd804af7481507b'
        required: true
        type: string
      run_id:
        description: 'Run id of successfull LibreOffice build action'
        default: '7748338260'
        required: true
        type: string

jobs:
  build:
    runs-on: self-hosted
    container:
      image: klimarev/lo_co_build_env:1.10
      options: --user ghactions
    env:
      co_repo: CollaboraOnline/online
      app: online/android/build/app/outputs
      lib: online/android/build/lib/outputs
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout ${{ env.co_repo }}
        uses: actions/checkout@v4
        with:
          repository: ${{ env.co_repo }}
          ref: ${{ inputs.co_ref }}
          path: './online'

      - name: Download LibreOffice core compiled for android
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pattern: android*
          merge-multiple: true
          run-id: ${{ inputs.run_id }}

      - name: Build info 
        run: |
          echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
          echo "üêß This job is now running on a ${{ runner.os }} server!"
          echo "üîé This job builds ${{ env.co_repo }} repository commit ${{ inputs.co_ref }} for adnroid."
          echo "This job is run from $(whoami)"
          echo "Current directory is $(pwd)"
          echo "Current directory structure: $(ls -la)"
          echo "CollaboraOnline directory size: $(du -sh online)"

      - name: Extract archives
        run: |
          for file in *.tar.gz; do tar -xzf "$file"; done
          rm *.tar.gz

      - name: Build ${{ env.co_repo }}
        run: |
          export workspace=$(pwd)
          cd online
          ./autogen.sh
          ./configure --enable-androidapp \
                      --with-lo-builddir=$workspace/android_armeabi-v7a_core_${{ inputs.lo_ref }}:$workspace/android_arm64-v8a_core_${{ inputs.lo_ref }}:$workspace/android_x86_core_${{ inputs.lo_ref }}:$workspace/android_x86_64_core_${{ inputs.lo_ref }} \
                      --with-poco-includes=$poco/include:$poco/include:$poco/include:$poco/include \
                      --with-poco-libs=$poco/armeabi-v7a/lib:$poco/arm64-v8a/lib:$poco/x86/lib:$poco/x86_64/lib \
                      --with-zstd-includes=$zstd/armeabi-v7a/include:$zstd/arm64-v8a/include:$zstd/x86/include:$zstd/x86_64/include \
                      --with-zstd-libs=$zstd/armeabi-v7a/lib:$zstd/arm64-v8a/lib:$zstd/x86/lib:$zstd/x86_64/lib \
                      --disable-setcap \
                      --enable-silent-rules
          make
          cd android
          ./gradlew --parallel build
        env:
          poco: /opt/android-poco
          zstd: /opt/android-zstd
          ANDROID_SDK_ROOT: /opt/android_sdk

      - name: Check if ${{ env.app }} contains build files
        run: |
          du -sh ${{ env.app }}
          ls -la ${{ env.app }}

      - name: Check if ${{ env.lib }} contains build files
        run: |
          du -sh ${{ env.lib }}
          ls -la ${{ env.lib }}

      - name: Archive ${{ env.app }}
        run: |
          tar --totals -czf app.tar.gz ${{ env.app }}

      - name: Archive ${{ env.lib }}
        run: |
          tar --totals -czf  lib.tar.gz ${{ env.lib }}

      - name: Upload files to a GitHub release
        uses: svenstaro/upload-release-action@2.7.0
        with:
          file: "*.tar.gz"
          overwrite: true
          file_glob: true
          release_name: android_collabora_${{ inputs.co_ref }}
          body: "These are compiled collabora app and lib for Android for 4 platforms: armeabi-v7a, arm64-v8a, x86, x86_64"
      
      - run: echo "üçè This job's status is ${{ job.status }}."
